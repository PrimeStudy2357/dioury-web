/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TimelineIndexRouteImport } from './routes/timeline/index'
import { Route as SignupIndexRouteImport } from './routes/signup/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as TimelineDoneRouteImport } from './routes/timeline/done'
import { Route as TimelineCreateRouteImport } from './routes/timeline/create'
import { Route as SignupDoneRouteImport } from './routes/signup/done'
import { Route as SessionCreateRouteImport } from './routes/session/create'
import { Route as LoginPasswordRouteImport } from './routes/login/password'
import { Route as TimelineTimelineIdIndexRouteImport } from './routes/timeline/$timelineId/index'
import { Route as SessionSessionIdIndexRouteImport } from './routes/session/$sessionId/index'
import { Route as SessionSessionIdEditRouteImport } from './routes/session/$sessionId/edit'
import { Route as TimelineTimelineIdSettingIndexRouteImport } from './routes/timeline/$timelineId/setting/index'
import { Route as TimelineTimelineIdSettingMemberRouteImport } from './routes/timeline/$timelineId/setting/member'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TimelineIndexRoute = TimelineIndexRouteImport.update({
  id: '/timeline/',
  path: '/timeline/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupIndexRoute = SignupIndexRouteImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const TimelineDoneRoute = TimelineDoneRouteImport.update({
  id: '/timeline/done',
  path: '/timeline/done',
  getParentRoute: () => rootRouteImport,
} as any)
const TimelineCreateRoute = TimelineCreateRouteImport.update({
  id: '/timeline/create',
  path: '/timeline/create',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupDoneRoute = SignupDoneRouteImport.update({
  id: '/signup/done',
  path: '/signup/done',
  getParentRoute: () => rootRouteImport,
} as any)
const SessionCreateRoute = SessionCreateRouteImport.update({
  id: '/session/create',
  path: '/session/create',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginPasswordRoute = LoginPasswordRouteImport.update({
  id: '/login/password',
  path: '/login/password',
  getParentRoute: () => rootRouteImport,
} as any)
const TimelineTimelineIdIndexRoute = TimelineTimelineIdIndexRouteImport.update({
  id: '/timeline/$timelineId/',
  path: '/timeline/$timelineId/',
  getParentRoute: () => rootRouteImport,
} as any)
const SessionSessionIdIndexRoute = SessionSessionIdIndexRouteImport.update({
  id: '/session/$sessionId/',
  path: '/session/$sessionId/',
  getParentRoute: () => rootRouteImport,
} as any)
const SessionSessionIdEditRoute = SessionSessionIdEditRouteImport.update({
  id: '/session/$sessionId/edit',
  path: '/session/$sessionId/edit',
  getParentRoute: () => rootRouteImport,
} as any)
const TimelineTimelineIdSettingIndexRoute =
  TimelineTimelineIdSettingIndexRouteImport.update({
    id: '/timeline/$timelineId/setting/',
    path: '/timeline/$timelineId/setting/',
    getParentRoute: () => rootRouteImport,
  } as any)
const TimelineTimelineIdSettingMemberRoute =
  TimelineTimelineIdSettingMemberRouteImport.update({
    id: '/timeline/$timelineId/setting/member',
    path: '/timeline/$timelineId/setting/member',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login/password': typeof LoginPasswordRoute
  '/session/create': typeof SessionCreateRoute
  '/signup/done': typeof SignupDoneRoute
  '/timeline/create': typeof TimelineCreateRoute
  '/timeline/done': typeof TimelineDoneRoute
  '/login': typeof LoginIndexRoute
  '/signup': typeof SignupIndexRoute
  '/timeline': typeof TimelineIndexRoute
  '/session/$sessionId/edit': typeof SessionSessionIdEditRoute
  '/session/$sessionId': typeof SessionSessionIdIndexRoute
  '/timeline/$timelineId': typeof TimelineTimelineIdIndexRoute
  '/timeline/$timelineId/setting/member': typeof TimelineTimelineIdSettingMemberRoute
  '/timeline/$timelineId/setting': typeof TimelineTimelineIdSettingIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login/password': typeof LoginPasswordRoute
  '/session/create': typeof SessionCreateRoute
  '/signup/done': typeof SignupDoneRoute
  '/timeline/create': typeof TimelineCreateRoute
  '/timeline/done': typeof TimelineDoneRoute
  '/login': typeof LoginIndexRoute
  '/signup': typeof SignupIndexRoute
  '/timeline': typeof TimelineIndexRoute
  '/session/$sessionId/edit': typeof SessionSessionIdEditRoute
  '/session/$sessionId': typeof SessionSessionIdIndexRoute
  '/timeline/$timelineId': typeof TimelineTimelineIdIndexRoute
  '/timeline/$timelineId/setting/member': typeof TimelineTimelineIdSettingMemberRoute
  '/timeline/$timelineId/setting': typeof TimelineTimelineIdSettingIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login/password': typeof LoginPasswordRoute
  '/session/create': typeof SessionCreateRoute
  '/signup/done': typeof SignupDoneRoute
  '/timeline/create': typeof TimelineCreateRoute
  '/timeline/done': typeof TimelineDoneRoute
  '/login/': typeof LoginIndexRoute
  '/signup/': typeof SignupIndexRoute
  '/timeline/': typeof TimelineIndexRoute
  '/session/$sessionId/edit': typeof SessionSessionIdEditRoute
  '/session/$sessionId/': typeof SessionSessionIdIndexRoute
  '/timeline/$timelineId/': typeof TimelineTimelineIdIndexRoute
  '/timeline/$timelineId/setting/member': typeof TimelineTimelineIdSettingMemberRoute
  '/timeline/$timelineId/setting/': typeof TimelineTimelineIdSettingIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login/password'
    | '/session/create'
    | '/signup/done'
    | '/timeline/create'
    | '/timeline/done'
    | '/login'
    | '/signup'
    | '/timeline'
    | '/session/$sessionId/edit'
    | '/session/$sessionId'
    | '/timeline/$timelineId'
    | '/timeline/$timelineId/setting/member'
    | '/timeline/$timelineId/setting'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login/password'
    | '/session/create'
    | '/signup/done'
    | '/timeline/create'
    | '/timeline/done'
    | '/login'
    | '/signup'
    | '/timeline'
    | '/session/$sessionId/edit'
    | '/session/$sessionId'
    | '/timeline/$timelineId'
    | '/timeline/$timelineId/setting/member'
    | '/timeline/$timelineId/setting'
  id:
    | '__root__'
    | '/'
    | '/login/password'
    | '/session/create'
    | '/signup/done'
    | '/timeline/create'
    | '/timeline/done'
    | '/login/'
    | '/signup/'
    | '/timeline/'
    | '/session/$sessionId/edit'
    | '/session/$sessionId/'
    | '/timeline/$timelineId/'
    | '/timeline/$timelineId/setting/member'
    | '/timeline/$timelineId/setting/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginPasswordRoute: typeof LoginPasswordRoute
  SessionCreateRoute: typeof SessionCreateRoute
  SignupDoneRoute: typeof SignupDoneRoute
  TimelineCreateRoute: typeof TimelineCreateRoute
  TimelineDoneRoute: typeof TimelineDoneRoute
  LoginIndexRoute: typeof LoginIndexRoute
  SignupIndexRoute: typeof SignupIndexRoute
  TimelineIndexRoute: typeof TimelineIndexRoute
  SessionSessionIdEditRoute: typeof SessionSessionIdEditRoute
  SessionSessionIdIndexRoute: typeof SessionSessionIdIndexRoute
  TimelineTimelineIdIndexRoute: typeof TimelineTimelineIdIndexRoute
  TimelineTimelineIdSettingMemberRoute: typeof TimelineTimelineIdSettingMemberRoute
  TimelineTimelineIdSettingIndexRoute: typeof TimelineTimelineIdSettingIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/timeline/': {
      id: '/timeline/'
      path: '/timeline'
      fullPath: '/timeline'
      preLoaderRoute: typeof TimelineIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/timeline/done': {
      id: '/timeline/done'
      path: '/timeline/done'
      fullPath: '/timeline/done'
      preLoaderRoute: typeof TimelineDoneRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/timeline/create': {
      id: '/timeline/create'
      path: '/timeline/create'
      fullPath: '/timeline/create'
      preLoaderRoute: typeof TimelineCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup/done': {
      id: '/signup/done'
      path: '/signup/done'
      fullPath: '/signup/done'
      preLoaderRoute: typeof SignupDoneRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/session/create': {
      id: '/session/create'
      path: '/session/create'
      fullPath: '/session/create'
      preLoaderRoute: typeof SessionCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/password': {
      id: '/login/password'
      path: '/login/password'
      fullPath: '/login/password'
      preLoaderRoute: typeof LoginPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/timeline/$timelineId/': {
      id: '/timeline/$timelineId/'
      path: '/timeline/$timelineId'
      fullPath: '/timeline/$timelineId'
      preLoaderRoute: typeof TimelineTimelineIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/session/$sessionId/': {
      id: '/session/$sessionId/'
      path: '/session/$sessionId'
      fullPath: '/session/$sessionId'
      preLoaderRoute: typeof SessionSessionIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/session/$sessionId/edit': {
      id: '/session/$sessionId/edit'
      path: '/session/$sessionId/edit'
      fullPath: '/session/$sessionId/edit'
      preLoaderRoute: typeof SessionSessionIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/timeline/$timelineId/setting/': {
      id: '/timeline/$timelineId/setting/'
      path: '/timeline/$timelineId/setting'
      fullPath: '/timeline/$timelineId/setting'
      preLoaderRoute: typeof TimelineTimelineIdSettingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/timeline/$timelineId/setting/member': {
      id: '/timeline/$timelineId/setting/member'
      path: '/timeline/$timelineId/setting/member'
      fullPath: '/timeline/$timelineId/setting/member'
      preLoaderRoute: typeof TimelineTimelineIdSettingMemberRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginPasswordRoute: LoginPasswordRoute,
  SessionCreateRoute: SessionCreateRoute,
  SignupDoneRoute: SignupDoneRoute,
  TimelineCreateRoute: TimelineCreateRoute,
  TimelineDoneRoute: TimelineDoneRoute,
  LoginIndexRoute: LoginIndexRoute,
  SignupIndexRoute: SignupIndexRoute,
  TimelineIndexRoute: TimelineIndexRoute,
  SessionSessionIdEditRoute: SessionSessionIdEditRoute,
  SessionSessionIdIndexRoute: SessionSessionIdIndexRoute,
  TimelineTimelineIdIndexRoute: TimelineTimelineIdIndexRoute,
  TimelineTimelineIdSettingMemberRoute: TimelineTimelineIdSettingMemberRoute,
  TimelineTimelineIdSettingIndexRoute: TimelineTimelineIdSettingIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
